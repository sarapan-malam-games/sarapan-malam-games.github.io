[{"content":"\rAgar terlihat menarik dan hidup pada sebuah gim tentunya kita perlu membuat interaksi karakter ke objek lingkungan sekitar, salah satunya rumput atau dedaunan. Ditutorial kali ini kita akan membuatnya dengan cara sederhana tetapi dengan hasil yang bagus.\n🖐 Persiapan Unduh Project Template Berikut untuk memulai:\nProject Template\nPada Project Template diatas sudah kita kita atur beberapa hal, seperti:\nCollision Layer Dan Collision Mask sudah kita atur berdasarkan jenis objeknya Node Player, Tilemap, Grass sudah kita siapkan, teman-teman tinggal memodifikasinya jika perlu Struktur Project Template: ✍️ Mulai Buka Project Template, kemudian buka Shader Editor (berada dipanel bawah).\nKlik File -\u0026gt; New Shader.\nSetelah popup Create Shader muncul, arahkan Path ke res://shaders/ dan simpan dengan nama WindSway.gdshader atau bebas sesuai keingann teman-teman. Sekarang kita perlu membuat salinan shader dari link 2D Wind Sway, open link itu kemudian copy paste kode shadernya ke file shader yang sudah kita buat sebelumnya. Kita perlu mengedit shader tesebut, dengan menambahkan variable dan statement yang kita butuhkan untuk membuat texture menjadi terlihat miring, nanti kita gunakan untuk membuat rumput bergoyang saat player menyentuhnya. Contoh bentuk texture menjadi miring (skew)\nKita buat variabel baru dengan nama skew. uniform float skew: hint_range(-500.0, 500.0) = 0; Kemudian kita tambahkan statement berikut pada fungsi vertex if (skew != 0.0) { VERTEX.x += max(0.0, (1.0-UV.y) - heightOffset) * (skew / 12.0); } Kita simpan file shadernya dengan cara Klik File -\u0026gt; Save File Sekarang saatnya menerapkan shader yang sudah kita buat dan membuat script untuk node Grass.\nMenerapkan shader:\nOpen node Grass lalu Klik node Sprite2d. Tambahkan ShaderMaterial pada node Sprite2d Klik Resource kemudian centang properti Local To Scene pada ShaderMaterial. ShaderMaterial termasuk type data Resource karena itu semua data didalamnya akan dibagikan kesemua instance secara default, jadi untuk membuatnya unik disetiap instance kita perlu mencetang properti Local To Scene\nPada properti ShaderMaterial tambahkan shader yang sudah kita buat sebelumnya, dengan cara drag drop file shader ke properti Shader. Kita sudah mempunyai shader yang dibutuhkan untuk membuat texture menjadi miring, kalian bisa bereksperimen dengan mengubah-ubah nilai parameter pada shader tersebut. Cobalah untuk mengubah parameter Skew, menjadi 300 atau -300, nanti akan terlihat bentuk texture menjadi agak condong ke kanan atau kiri. Menerapkan Script:\nKlik icon script pada node Grass, kemudian pada fungsi _ready tambahkan potongan kode berikut: %Sprite2d.material.set_shader_parameter(\u0026#34;offset\u0026#34;, randi() % 3) connect(\u0026#34;body_entered\u0026#34;, _on_sway) connect(\u0026#34;body_exited\u0026#34;, _on_sway) Kemudian buatlah fungsi _on_sway untuk menerima signal body_entered dan body_exited if body is Player: var direction = global_position.direction_to(body.global_position) var skew = clamp(remap(body.velocity.length() * sign(-direction.x), -body.SPEED, body.SPEED, min_skew, max_skew), min_skew, max_skew) var tween = create_tween() tween.tween_property(%Sprite2d.material, \u0026#34;skew\u0026#34;, skew, 0.2).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_CUBIC) tween.tween_property(%Sprite2d.material, \u0026#34;skew\u0026#34;, 0.0, 2).set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_ELASTIC) Jadi saat node Player menyentuh atau keluar dari area collision node Grass, node Grass akan bereaksi dan bergerak. Sekarang buka node Level, kemudian taruh node Grass dengan drag drop ke dalamnya, taruh posisi sesuai keinginan teman-teman.\n👏 Referensi https://sarapan-malam-games.itch.io/interactive-foliage https://zackbellgames.com/2014/11/11/sprite-skewing-for-procedural-animation/ https://forum.defold.com/t/2d-pixelated-grass-waving-shader/56501/42 ","permalink":"https://sarapan-malam-games.github.io/tutorial/membuat-interaksi-rumput-bergoyang/","summary":"Agar terlihat menarik dan hidup pada sebuah gim tentunya kita perlu membuat interaksi karakter ke objek lingkungan sekitar, salah satunya rumput atau dedaunan. Ditutorial kali ini kita akan membuatnya dengan cara sederhana tetapi dengan hasil yang bagus.\n🖐 Persiapan Unduh Project Template Berikut untuk memulai:\nProject Template\nPada Project Template diatas sudah kita kita atur beberapa hal, seperti:\nCollision Layer Dan Collision Mask sudah kita atur berdasarkan jenis objeknya Node Player, Tilemap, Grass sudah kita siapkan, teman-teman tinggal memodifikasinya jika perlu Struktur Project Template: ✍️ Mulai Buka Project Template, kemudian buka Shader Editor (berada dipanel bawah).","title":"Membuat Interaksi Rumput Bergoyang | Godot 4"},{"content":"\rPada tutorial ini kita akan belajar menggerakan karakter player agar dapat berjalan, jatuh dan melompat.\n🖐 Persiapan Kita akan mulai dengan mendownload Project Template terlebih dahulu\nProject Template\nDidalam Project Template sudah berisi node Player dan Ground. Node Ground digunakan untuk tempat node Player Berpijak nantinya.\n✍️ Mulai Setelah Project Template terbuka, klik icon script pada node Player Didalam script node Player buat variable seperti berikut\n@export var movespeed := 10000.0 @export var jump_force := 1000.0 @export var gravity := 3000.0 @export var direction := 0.0 Saya akan menjelaskan kegunaan dari variable diatas\nmovespeed mengatur kecepatan gerak player jump_force mengatur kekuatan / ketinggian player saat melompat gravity mengatur gravitasi player direction digunakan sebagai penanda yang menampung nilai dari hasil Input (arah kiri dan kanan) dari user dan juga mengatur arah gerak player Catatan: Nilai variabel movespeed, jump_force dan gravity tergantung pada ukuran Sprite. Kamu harus menyesuaikan nilai variabelnya supaya lebih responsif.\nTambahkan beberapa baris kode berikut\nfunc _physics_process(delta: float) -\u0026gt; void:\rmove_and_slide()\rif not is_on_floor():\rvelocity.y += gravity * delta\rdirection = Input.get_axis(\u0026#34;move_left\u0026#34;, \u0026#34;move_right\u0026#34;)\rvelocity.x = (movespeed * direction) * delta\rif direction:\r$Sprite2d.flip_h = direction \u0026lt;= 0.0\rif Input.is_action_just_pressed(\u0026#34;jump\u0026#34;) and is_on_floor():\rvelocity.y = -jump_force\rif Input.is_action_just_released(\u0026#34;jump\u0026#34;) and velocity.y \u0026lt; -jump_force/2:\rvelocity.y = -jump_force/2 Saya akan menjelaskan apa saja maksud dari barisan kode diatas, kita mulai dengan kode dibawah\nfunc _physics_process(delta: float) -\u0026gt; void: Fungsi akan selalu dipanggil selama game berjalan, secara default fungsi ini dipanggil 60 kali per detik. pada fungsi ini kita akan melakukan perhitungan fisika. Parameter delta pada fungsi _physics_process adalah waktu antara setiap frame, kita dapat mengkalikan kecepatan gerak node Player dengan parameter ini, sehingga node Player bergerak berdasarkan piksel per detik, bukan piksel per frame.\nSelanjutnya kita tambahkan sebuah fungsi dibawah yang akan mengkalkulasi perhitungan dari variable velocity, sehingga node Player bisa bergerak dari posisi sekarang ke posisi lainnya.\nmove_and_slide() Kita akan membuat node Player memiliki gravitasi, jika node Player tidak menyentuh tanah / pijakan maka node player akan bergerak ke bawah dan akan berhenti sampai dia menemukan tanah / pijakan, dengan itu kita menggunakan kode berikut.\nif not is_on_floor():\rvelocity.y += gravity * delta Sekarang kita mengatur arah gerak untuk node Player, agar nanti node Player bisa bergerak ke arah kanan dan kiri. Pada argument Input.get_axis(... akan mengkalkulasi nilai input dari user ketika user menekan key dengan alias move_left atau move_right kemudian nilai tersebut kita tetapkan ke variabel direction, dengan hal itu kita sudah mengatur arah gerak untuk node Player.\ndirection = Input.get_axis(\u0026#34;move_left\u0026#34;, \u0026#34;move_right\u0026#34;) Setelah arah gerak kita atur, selanjutnya kita membuat node Player bisa bergerak / berjalan horizontal dengan cara mengkalikan variabel movespeed, direction dan delta dan hasil nilainya kita tetapkan ke variable velocity.x, dengan itu kita mendapatkan nilai besaran yang kita butuhkan untuk bisa bergerak / berjalan secara horizontal.\nvelocity.x = movespeed - direction - delta; Selanjutnya kita mengatur posisi texture sesuai dengan arah gerak node Player. Kita buat kondisi jika variabel direction bukan sama dengan 0.0, kemudan untuk nilai $Sprite2d.flip_h kita tetapkan nilai dengan kondisi jika direction kurang dari 0.0 maka $Sprite2d.flip_h bernilai true.\nNote: .flip_h adalah property dari node Sprite2d\nif direction: $Sprite2d.flip_h = direction \u0026lt;= 0.0 Sekarang saatnya kita membuat node Player bisa melompat dengan cara, membuat sebuah kondisi dimana saat user menekan key dengan alias jump dan posisi node Player berada pada tanah / sedang berpijak, maka kita menetapkan variabel velocity.y dengan nilai negatif jump_force agar posisi node Player bergerak keatas.\nif Input.is_action_just_pressed(\u0026#34;jump\u0026#34;) and is_on_floor():\rvelocity.y = -jump_force Oke saya rasa sampai disini node Player kita sudah bisa bergerak sesuai dengan harapakan kita sebelumnya yaitu bisa berjalan, jatuh dan melompat.\nSemoga tutorial kita kali ini dapat teman-teman pahami dan dipraktekan dengan baik. Terimakasih telah membaca dan jangan lupa untuk mempraktekkannya.\n👏 Referensi https://docs.godotengine.org/en/stable/tutorials/scripting/idle_and_physics_processing.html https://godottutorials.pro/how-to-make-games-godot/ https://kidscancode.org/godot_recipes/2d/platform_character/ http://kidscancode.org/godot_recipes/basics/understanding_delta/ ","permalink":"https://sarapan-malam-games.github.io/tutorial/menggerakan-karakter-platformer-dasar/","summary":"Pada tutorial ini kita akan belajar menggerakan karakter player agar dapat berjalan, jatuh dan melompat.\n🖐 Persiapan Kita akan mulai dengan mendownload Project Template terlebih dahulu\nProject Template\nDidalam Project Template sudah berisi node Player dan Ground. Node Ground digunakan untuk tempat node Player Berpijak nantinya.\n✍️ Mulai Setelah Project Template terbuka, klik icon script pada node Player Didalam script node Player buat variable seperti berikut\n@export var movespeed := 10000.","title":"Menggerakan Karakter Platformer - Level Dasar | Godot 4"},{"content":"","permalink":"https://sarapan-malam-games.github.io/solution/test/","summary":"","title":"Test"},{"content":"Test Tutorial post ","permalink":"https://sarapan-malam-games.github.io/tutorial/test/","summary":"Test Tutorial post ","title":"Title"},{"content":"","permalink":"https://sarapan-malam-games.github.io/project/","summary":"","title":"Projects"}]